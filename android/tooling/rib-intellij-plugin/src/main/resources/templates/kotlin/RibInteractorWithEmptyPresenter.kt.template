package ${package_name}

import com.uber.rib.core.Bundle
import com.uber.rib.core.EmptyPresenter
import com.uber.rib.core.Interactor
import com.uber.rib.core.RibInteractor

import javax.inject.Inject

/**
 * Coordinates Business Logic for [${rib_name}Scope].
 *
 * TODO describe the logic of this scope.
 */
@RibInteractor
class ${rib_name}Interactor @Inject constructor(
  private val presenter: EmptyPresenter
) : Interactor<EmptyPresenter, ${rib_name}Router>() {

  override fun getPresenter(): EmptyPresenter = presenter

  override fun didBecomeActive(savedInstanceState: Bundle?) {
    super.didBecomeActive(savedInstanceState)

    // TODO: Add attachment logic here (RxSubscriptions, etc.).
  }

  override fun willResignActive() {
    super.willResignActive()

    // TODO: Perform any required clean up here, or delete this method entirely if not needed.
  }

}
